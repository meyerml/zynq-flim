// global_defines.h
#ifndef GLOBAL_DEFINES_H
#define GLOBAL_DEFINES_H


//#define NUMSAMPLES 1024
//#define NUMSAMPLES 4096  //should be an even number
#define NUMSAMPLES 8192  // for some reason the standard deviation is too large for this value. probably has to do with a variable overflowing...
//#define NUMSAMPLES 16384
//#define NUMSAMPLES 32768
//#define NUMSAMPLES 131072
//#define NUMSAMPLES 1048576
//#define NUMSAMPLES 524288
#define PRINT_STOPRESULTS 1  //should we print all stopresults or just mean and std?
#define PRINT_REFINDICES 0  //should weprint refindexes as well?
#define PRINT_STATISTICS 1 //should we print stopresult statistics?
#define DESTINATIONLENGTH ((NUMSAMPLES) * 8 )  //size in bytes
//#define READ_SAMPLES_PER_CALL 2  //how many samples to write to UART per task2 call
#define READ_SAMPLES_PER_CALL 1024  //how many samples does a call to task 2 read from RAM? messes up the timing, because task 2 takes too long and thus the wdt routine is not exercised frequently anymore.

#define REF_INDEX_BITWIDTH 24 //16 //24 //0(no data out),2,4,8,16,24,6,or 12 bits wide
#define STOP_DATA_BITWIDTH 20 //20 //14, 16, 18, or 20 bits wide


#define MEASURE_TIME 0

//this only works with the value 1, the DMA in direct register mode doesnt allow sending data beyond the first axis tlast.
//therefore we will have to implement Scatter Gather engine in the DMA engine.
//#define BURSTS_PER_DMA_TRANSFER 1  //how many AXI stream Tlast signals per DMA transfer?


#endif // GLOBAL_DEFINES_H
